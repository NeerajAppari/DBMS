Oracle SET OPERATORS on tables:

CREATE TABLE departments
(
department_id NUMBER(2) CONSTRAINT department_pk PRIMARY KEY,
department_name VARCHAR2(14),
location VARCHAR2(13)
);

INSERT INTO departments VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO departments VALUES (20,'RESEARCH','DALLAS');
INSERT INTO departments VALUES (30,'SALES','CHICAGO');
INSERT INTO departments VALUES (40,'OPERATIONS','BOSTON');
COMMIT;

CREATE TABLE employeess
(
employee_id NUMBER(4) CONSTRAINT employeess_pk PRIMARY KEY,
employee_name VARCHAR2(10),
job VARCHAR2(9),
manager_id NUMBER(4),
hiredate DATE,
salary NUMBER(7,2),
commission NUMBER(7,2),
department_id NUMBER(2) CONSTRAINT emp_department_id_fk REFERENCES departments(department_id)
);


INSERT INTO employeess VALUES (7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);

INSERT INTO employeess VALUES (7499,'ALLEN','SALESMAN',7698,to_date('20-02-1981','dd-mm-yyyy'),1600,300,30);

INSERT INTO employeess VALUES (7521,'WARD','SALESMAN',7698,to_date('22-02-1981','dd-mm-yyyy'),1250,500,30);

INSERT INTO employeess VALUES (7566,'JONES','MANAGER',7839,to_date('02-04-1981','dd-mm-yyyy'),2975,NULL,20);

INSERT INTO employeess VALUES (7654,'MARTIN','SALESMAN',7698,to_date('28-09-1981','dd-mm-yyyy'),1250,1400,30);

INSERT INTO employeess VALUES (7698,'BLAKE','MANAGER',7839,to_date('01-05-1981','dd-mm-yyyy'),2850,NULL,30);

INSERT INTO employeess VALUES (7782,'CLARK','MANAGER',7839,to_date('09-06-1981','dd-mm-yyyy'),2450,NULL,10);

INSERT INTO employeess VALUES (7788,'SCOTT','ANALYST',7566,to_date('13-JUL-1981','dd-mm-rr')-51,1100,NULL,20);

INSERT INTO employeess VALUES (7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);

INSERT INTO employeess VALUES (7844,'TURNER','SALESMAN',7698,to_date('08-09-1981','dd-mm-yyyy'),1500,0,30);

INSERT INTO employeess VALUES (7876,'ADAMS','CLERK',7788,to_date('13-JUL-1981','dd-mm-rr')-51,1100,NULL,20);

INSERT INTO employeess VALUES (7900,'JAMES','CLERK',7698,to_date('03-12-1981','dd-mm-yyyy'),950,NULL,30);

INSERT INTO employeess VALUES (7902,'FORD','ANALYST',7566,to_date('03-12-1981','dd-mm-yyyy'),3000,NULL,20);

INSERT INTO employeess VALUES (7934,'MILLER','CLERK',7782,to_date('23-1-1981','dd-mm-yyyy'),1300,NULL,10);

------------------------------------------------------------------------------------------------------------------------------------------------------

Definition:
Set operator allow you to combine the result of multiple separate queries into a single result set.

EG: 
###DEPARTMENT 10,20,30:

###QUERY:
SELECT department_id,department_name
FROM departments
WHERE department_id<=30;

EG:
###DEPARTMENT 20,30,40:

###QUERY:
SELECT department_id,department_name
FROM departments
WHERE department_id>=20;

1. UNION SET OPERATOR:
the union set operatro reutrns all distinct rows selected by either query. That means any duplicate rows will be removed.

SELECT department_id,department_name
FROM departments
WHERE department_id<=30
UNION
SELECT department_id,department_name
FROM departments
WHERE department_id>=20
ORDER BY 1;


2. UNION ALL:
The union all set operator return all rows selected by either query. That means any duplicate will remain in the final result set.

SELECT department_id,department_name
FROM departments
WHERE department_id<=30
UNION ALL
SELECT department_id,department_name
FROM departments
WHERE department_id>=20
ORDER BY 1;

3. INTERSECT:
The intersect set operator reutrns all the distincty rows selected by both queires.
That means only those rows common to both queries will be present in the final result set.


SELECT department_id,department_name
FROM departments
WHERE department_id<=30
INTERSECT
SELECT department_id,department_name
FROM departments
WHERE department_id>=20
ORDER BY 1;


4. MINUS:
The intersect set operator reutrns all the distincty rows selected by first qurery but not the second. 
This is functionally equivalent to the ansi set operator EXCEPT DISTINCT.

###query1 - query2:
SELECT department_id,department_name
FROM departments
WHERE department_id<=30
MINUS
SELECT department_id,department_name
FROM departments
WHERE department_id>=20
ORDER BY 1;

####query2- query1:
SELECT department_id,department_name
FROM departments
WHERE department_id>=20
MINUS
SELECT department_id,department_name
FROM departments
WHERE department_id<=30
ORDER BY 1;



QUESTIONS:

create the following schema:
cricket_team(player_id, player_name, age)
football_team(player_id, player_name, age)


Question:
1. get the count of players (from both the teams)
2. display the player name who are present in both the team.
3. display all the players name who are part of only cricket team.
4. get the players name who are in cricket team but not in football team.
5. get the players name who are in football team but not in cricket team.
6. Display the players name who are playing in both the team.


CREATE TABLE cricket_team
(
player_id NUMBER(3),
player_name VARCHAR2(20), 
age NUMBER(2)
);


CREATE TABLE football_team
(
player_id NUMBER(3),
player_name VARCHAR2(20), 
age INT(2)
);


1.
select count(*) from cricket_team
UNION
select count(*) from football_team
ORDER BY 1;










